---
title: "Data Reanalysis"
author: "Marcel Ferreira"
date: "`r Sys.Date()`"
format:
  revealjs:
    incremental: true
    embed-resources: true
    css: style.css
---

## About me

-   Medical Physicist (2011-2014);

-   Master of Science in Biotechnology (2017);

-   PhD in Biotechnology (2023);

## About me

::: columns
::: {.column width="50%"}
I started in 2013 during my undergraduate degree with protein structure.
:::

::: {.column width="50%"}
[![Experimental SAXS curve of SCLam and fitting procedure with simulated curves.](images/12010_2015_1743_Fig4_HTML.webp){alt="Experimental SAXS curve of SCLam and fitting procedure with simulated curves."}](https://link.springer.com/article/10.1007/s12010-015-1743-7)
:::
:::

## About me

-   Since 2015 I work focused on bone tissue, especially with cell-biomaterial interaction;

-   Masters: [`Kinome`](https://pamgene.com/technology/);

-   PhD: `Transcriptome`/`Proteome`/`Epigenome`;

## Data

[![Data to wisdom](images/Data-Wisdom-768x250.jpg)](https://theifactory.com/news/gaining-wisdom-from-data/)

## Data

[![Data to conspiracy](images/Data-Wisdom-fun.jpg)](https://www.linkedin.com/pulse/data-information-knowledge-insights-achin-gupta/)

## Bioinformatics

![Data science vs Bioinformatics.](images/DSBioinfo.png){fig-align="center"}

**NIH**: "*Bioinformatics, as related to `genetics` and `genomics`, is a scientific subdiscipline that involves using computer technology to `collect`, `store`, `analyze` and `disseminate` biological data and information, such as DNA and amino acid sequences or annotations about those sequences*."

## Biological data

[![](images/MultiOmics.png)](https://comics.dcv.fct.unl.pt/resources/)

## Biological data

::: columns
::: {.column width="50%"}
![]()

![](images/transcript1.png)
:::

::: {.column width="50%"}
![](images/transcript2.png)
:::
:::

## Biological data - Databases

![](images/personalData1.png)

-   ![](images/personalData.png)

## Biological data - Databases

![Consortiums](images/databases.png){fig-align="center"}

## Biological data - Databases

-   These are biological science (`Online`) libraries, collected from scientific experiments, published literature, high-throughput experiment technology, and computational analysis;

-   Structured annotations!

-   Provide access to data programmatically (`API`);

-   Data is made freely available under certain licenses;

## Biological data - Experiments

::: columns
::: {#vcenter .column width="50%"}
[![Gene Expression Omnibus](images/geo.png){style="vertical-align: middle;" fig-align="center"}](https://www.ncbi.nlm.nih.gov/geo/)
:::

::: {.column width="50%"}
[![ArrayExpress](images/arrayExpress.png){style="vertical-align: middle;" fig-align="center"}](https://www.ebi.ac.uk/biostudies/arrayexpress)
:::
:::

Microarrays, RNA-Seq, miRNA-Seq, Proteomics (few), CHIP-seq, ATAC-seq, Kinase Array, Single Cell, ...

## Biological data

::: {.fragment .grow}
Why you `MUST` publish your data from high-throughput experiments?
:::

-   It allows reuse by the scientific community;

    -   Reduction of waste: Money, reagents, `LIVES`;

-   `Peer-review`;

    -   Open-data/Open science;

    -   Good practices;

## RNAseq

[![](images/RNAseqMappingAssembly2.png)](https://sydney-informatics-hub.github.io/training-RNAseq-slides/01_IntroductionToRNASeq/01_IntroductionToRNASeq.html#4)

## RNAseq

[![Advancing RNA-Seq analysis, Nature Biotechnology 28:421-423](images/RNAseqMappingAssembly.png)](https://learn.gencore.bio.nyu.edu/rna-seq-analysis/)

## GEO-GEO2R

::: columns
::: {.column width="50%"}
-   Gene Expression Omnibus;

-   NCBI-NIH;

-   About 4350 datasets;

-   Multiple species;

-   Array- and sequence-based data are accepted;
:::

::: {.column width="50%"}
[![Gene Expression Omnibus](images/geo.png){fig-align="center" width="450"}](https://www.ncbi.nlm.nih.gov/geo/)
:::
:::

## GEO-GEO2R

::: columns
::: {.column width="50%"}
-   [GEO2R](https://www.ncbi.nlm.nih.gov/geo/geo2r/) is an interactive web tool that allows users to compare two or more groups of Samples in a GEO Series in order to identify genes that are differentially expressed across experimental conditions.

-   Microarray - `LIMMA`;

-   RNAseq - `DeSeq2`(**BETA**);
:::

::: {.column width="50%"}
[![Gene Expression Omnibus](images/geo.png){fig-align="center" width="450"}](https://www.ncbi.nlm.nih.gov/geo/)
:::
:::

## GEO-GEO2R

`Query`: "**osteogenesis**"/ "**mus musculus**"/ "**Expression profilling by array**";

![](images/geo1.png)

## GEO-GEO2R

![](images/geo2.png)

## GEO-GEO2R

![](images/geo3.png)

## GEO-GEO2R

![](images/geo4.png)

## GEO-GEO2R

![](images/geo5.png)

## GEO-GEO2R

![](images/geo6.png)

## GEO-GEO2R

![](images/geo7.png)

## GEO-GEO2R

![](images/geo8.png)

## GEO-GEO2R

![](images/geo9.png)

## GEO-GEO2R

![](images/geo10.png)

## GEO-GEO2R

![](images/geo11.png)

## GEO-GEO2R

![](images/geo12.png){fig-align="center"}

## GEO-GEO2R

![](images/geo13.png)

## GEO-GEO2R

![](images/geo14.png){fig-align="center"}

## GEO-GEO2R

![](images/geo15.png){fig-align="center"}

## GEO-GEO2R

-   Multi Omics;
-   GEO2R not available for all data;

## ArrayExpress

::: columns
::: {.column width="50%"}
-   ArrayExpress;

-   EBI-EMBL;

-   76.801 datasets;

-   Multiple species;

-   Array- and sequence-based data are accepted;

-   No tool for analysis;
:::

::: {.column width="50%"}
[![ArrayExpress](images/arrayExpress.png)](https://www.ebi.ac.uk/biostudies/arrayexpress/studies)
:::
:::

## ArrayExpress

![](images/arrayExpress1.png){fig-align="center"}

## ArrayExpress

![](images/arrayExpress2.png){fig-align="center"}

## ArrayExpress

![](images/arrayExpress3.png)

## ArrayExpress

![](images/arrayExpress4.png)

## ArrayExpress

![](images/arrayExpress5.png){fig-align="center"}

## ArrayExpress

![](images/arrayExpress6.png)

## ArrayExpress

![](images/arrayExpress7.png)

## ArrayExpress

-   Data matrix (Or Expression matrix):

    -   Values of counts read by the equipment;

    -   Processed OR not;

-   Investigation Design Format (**IDF**):

    -   Set of protocols for this experiment;

-   Sample and Data Relationship Format (**SDRF**):

    -   Metadata about the samples;

-   Array Designs Format (**ADF**);

    -   Information about the probes;

## ArrayExpress

::: columns
::: {.column width="50%"}
[![R and Bioconductor](images/arrayExpress9.png)](https://bioconductor.org/)
:::

::: {.column width="50%"}
-   R programming language;

-   Bioconductor is a repository of bioinformatic packages;

-   For this type of analysis:

    -   `{Biobase}`;

    -   `{Limma}`, `{edgeR}` or `{DESeq}`;

    -   `{AnnotationDbi}`;

    -   `{org.Hs.eg.db}` -varies for each analyzed organism;

    -   `{tidyverse}*`;
:::
:::

## ArrayExpress

-   Import the data (`{readr}`);

-   `ExpMat`: ExpressionMatrix or `assayData`;

    -   Numeric matrix;

-   `adf` : Array description file or `featureData`:

    -   Data.frame;

-   `sdf` : Sample description file or `phenoData`;

    -   Data.frame.

## ArrayExpress

-   Data cleaning;

-   **Golden rule**:

    -   number of `ExpMat` rows equals the number of `adf` rows.

    -   row names and row order of `ExpMat` equals of `adf` rows.

    -   number of `ExpMat` columns equals the number of `sdf` rows.

    -   column names and order of `ExpMat` equals of `sdf` rows.

## ArrayExpress {.nonincremental}

-   ExpressionSet: R object from the `{Biobase}`;

-   `AnnotatedDataFrame` function on `adf` and `sdf`;

    ```{r, eval = FALSE, echo = TRUE}
    adf_final <- Biobase::AnnotatedDataFrame(adf)
    sdrf_final <- Biobase::AnnotatedDataFrame(sdf)

    eset <- ExpressionSet(assayData = ExpMat,
                          phenoData = sdf_final,
                          featureData = adf_final)
    ```

-   

    -   

        ```{r,eval = FALSE, echo = TRUE}
          exprs(eset) # extract the expression matrix
          pData(eset) # extract the pheno data
          fData(eset) # extract the feature data
        ```

## ArrayExpress {.nonincremental}

`LIMMA`

-   Quality control: `plotDensities()`, PCA;

-   Background correction: `backgroundCorrect()` ;

-   Normalization: `normalizeBetweenArrays()`;

    ```{r, eval=FALSE, echo=TRUE}
    exprs(eset) <- normalizeBetweenArrays(exprs(eset),
                                          method = "vsn")
    ```

## ArrayExpress {.nonincremental}

`LIMMA` - differential expression

-   Create a design: `model.matrix()`;

-   Fit the data: `lmFit()`;

-   Make the contrast: `makeContrasts()`;

-   Fit the contrast: `contrasts.fit()`;

-   Compute the statistic: `eBayes()`;

    ```{r, eval=FALSE, echo=TRUE}
    design <- model.matrix(~ 0 + pData(eset)$factor)

    fit <- lmFit(exprs(eset),
                design)

    cm <- makeContrasts(c1 = "factor1 - factor2",
                        levels = design)

    fit2 <- contrasts.fit(fit, cm)

    fit2 <- eBayes(fit2)
    ```

## ArrayExpress

`LIMMA` - differential expression

-   Extract the differential expressed genes table: `topTable()`;

    ```{r, eval=FALSE, echo=TRUE}
    topTable(fit2,
             coef = 1,
             adjust.method = "BH",#Benjamin hocheback - FDR
             number = Inf #show all genes
             )
    ```

## ArrayExpress

![](images/arrayExpress10.png)

## TCGA

::: columns
::: {.column width="70%"}
[![](images/tcga.png)](https://www.cancer.gov/ccg/research/genome-sequencing/tcga)
:::

::: {.column width="30%"}
-   SNPs;

-   RNAseq;

-   miRNAseq;

-   Methylation;

-   Survival Analysis;
:::
:::

## TCGA

-   `{TCGABiolinks}`;

-   R Package;

-   Facilitates data access and analysis.

## TCGA

miRNA example - Pancreatic Ductal Adenocarcinoma Study

```{r, eval=FALSE, echo=TRUE}
CancerProject <- "TCGA-PAAD"
DataDirectory <- paste0("/GDC/",gsub("-","_",CancerProject))
FileNameData <- paste0(DataDirectory, "_","miRNA_gene_quantification",".rda")

query.miR <- GDCquery(project = CancerProject, 
                      data.category = "Transcriptome Profiling",
                      data.type = "miRNA Expression Quantification",
                      #file.type = "hg19.mirna",
                      legacy = FALSE)
```

## TCGA

```{r, eval=FALSE, echo=TRUE}
samplesDown.miR <- getResults(query.miR,cols=c("cases"))

dataSmTP.miR <- TCGAquery_SampleTypes(barcode = samplesDown.miR,
                                      typesample = "TP")

dataSmNT.miR <- TCGAquery_SampleTypes(barcode = samplesDown.miR,
                                      typesample = "NT")


queryDown.miR <- GDCquery(project = CancerProject, 
                          data.category = "Transcriptome Profiling",
                          data.type = "miRNA Expression Quantification",
                          #file.type = "hg19.mirna",
                          legacy = FALSE,
                          barcode = c(dataSmTP.miR, dataSmNT.miR))
```

## TCGA

```{r, eval=FALSE, echo=TRUE}
GDCdownload(query = queryDown.miR,
            directory = DataDirectory)

dataAssy.miR <- GDCprepare(query = queryDown.miR, 
                           save = TRUE, 
                           save.filename = FileNameData, 
                           summarizedExperiment = TRUE,
                           directory =DataDirectory )

rownames(dataAssy.miR) <- dataAssy.miR$miRNA_ID
```

## TCGA

```{r, eval=FALSE, echo=TRUE}
# using read_count's data 
read_countData <-  colnames(dataAssy.miR)[grep("count", colnames(dataAssy.miR))]
dataAssy.miR <- dataAssy.miR[,read_countData]
colnames(dataAssy.miR) <- gsub("read_count_","", colnames(dataAssy.miR))

dataFilt <- TCGAanalyze_Filtering(tabDF = dataAssy.miR,
                                  method = "quantile", 
                                  qnt.cut =  0.25)   

dataDEGs <- TCGAanalyze_DEA(mat1 = dataFilt[,dataSmNT.miR],
                            mat2 = dataFilt[,dataSmTP.miR],
                            Cond1type = "Normal",
                            Cond2type = "Tumor",
                            fdr.cut = 0.01 ,
                            logFC.cut = 1,
                            method = "glmLRT") 
```

## TCGA

![](images/tcga1.png){fig-align="center"}

## Next steps (suggestions)

-   Enrichment analysis: `{clusterProfiler}`

    -   Gene Onology;

    -   KEGG pathways;

-   Gene set enrichment: `{fGSEA}`, `{GSVA}`

    -   Molecular signatures database ([msigdb](https://www.gsea-msigdb.org/gsea/msigdb/index.jsp));

    -   [Harmonizome](https://maayanlab.cloud/Harmonizome/);

-   Network interactions

    -   [STRING-DB](https://string-db.org/);

## Thanks you! {.center}

::: {style="text-align:center;"}
Marcel Ferreira, PhD (\@marceelrf)
:::

|                                                  |                                      |                                     |
|----------------------------|----------------------|----------------------|
| ![](images/Instagram_icon.png.webp){width="180"} | ![](images/twitter.jpg){width="200"} | ![](images/github.png){width="200"} |

<https://quartodomarcel.netlify.app/>

<https://marcel-ferreira.shinyapps.io/SciDashboard_marceelrf/>

## References

::: nonincremental
-   https://learn.gencore.bio.nyu.edu/rna-seq-analysis/

-   https://star-protocols.cell.com/protocols/931

-   https://statquest.org/

-   https://www.youtube.com/watch?v=tlf6wYJrwKY

-   https://home.proffernandamaciel.com.br/

-   https://sydney-informatics-hub.github.io/training-RNAseq-slides/01_IntroductionToRNASeq/01_IntroductionToRNASeq.html#1

-   https://bioconductor.org/packages/release/bioc/vignettes/limma/inst/doc/usersguide.pdf
:::
